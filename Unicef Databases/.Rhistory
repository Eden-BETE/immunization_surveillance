aes(x = annee, y = taux_couverture, color = country)) +
geom_line(linewidth = 1) +
labs(title = "Comparaison des taux de couverture (BCG)",
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
ggplot() +
geom_line(data = all_vaccines_long %>% filter(vaccine == "BCG", country == "France"),
aes(x = annee, y = taux_couverture, color = "France")) +
geom_line(data = global_data,
aes(x = annee, y = coverage, color = "Mondial")) +
labs(title = "Comparaison : France vs. Taux mondial (BCG)",
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
global_data <- regional_global %>% filter(region == "Global", vaccine == "BCG")
ggplot() +
geom_line(data = all_vaccines_long %>% filter(vaccine == "BCG", country == "France"),
aes(x = annee, y = taux_couverture, color = "France")) +
geom_line(data = global_data,
aes(x = annee, y = coverage, color = "Mondial")) +
labs(title = "Comparaison : France vs. Taux mondial (BCG)",
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
ggplot() +
geom_line(data = all_vaccines_long %>% filter(vaccine == "BCG", country == "France"),
aes(x = annee, y = taux_couverture, color = "France")) +
geom_line(data = global_data,
aes(x = annee, y = taux_couverture, color = "Mondial")) +
labs(title = "Comparaison : France vs. Taux mondial (BCG)",
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
ggplot(all_vaccines_long %>% filter(vaccine == "BCG", country %in% c("France", "Germany")),
aes(x = annee, y = taux_couverture, color = country)) +
geom_line(linewidth = 2) +
labs(title = "Comparaison des taux de couverture (BCG)",
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
ggplot() +
geom_line(data = all_vaccines_long %>% filter(vaccine == "BCG", country == "France"),
aes(x = annee, y = taux_couverture, color = "France")) +
geom_line(data = global_data,
aes(x = annee, y = taux_couverture, color = "Mondial")) +
labs(title = "Comparaison : France vs. Taux mondial (BCG)",
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
save(all_vaccines_long, file = "all_vaccines_long.RData")
save(regional_global, file= "regional_global.RData")
load("all_vaccines_long.RData")
load("regional_global.RData")
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Interface utilisateur
ui <- fluidPage(
titlePanel("Visualisation des taux de couverture vaccinale"),
sidebarLayout(
sidebarPanel(
selectInput("vaccine", "Sélectionnez un vaccin",
choices = unique(all_vaccines_long$vaccine),
selected = "BCG"),
selectInput("country", "Sélectionnez un pays",
choices = unique(all_vaccines_long$country),
selected = "France"),
checkboxInput("compare_global", "Inclure la moyenne mondiale", value = FALSE),
selectInput("countries_compare",
"Comparer avec d'autres pays",
choices = unique(all_vaccines_long$country),
selected = "Germany", multiple = TRUE)
),
mainPanel(
tabsetPanel(
tabPanel("Graphique par pays",
plotOutput("countryPlot")),
tabPanel("Comparaison avec d'autres pays",
plotOutput("comparePlot")),
tabPanel("Comparaison avec moyenne mondiale",
plotOutput("globalPlot"))
)
)
)
)
# Serveur
server <- function(input, output) {
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
# Graphique de comparaison avec la moyenne mondiale
output$globalPlot <- renderPlot({
country_data <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
global_data <- regional_global %>%
filter(vaccine == input$vaccine, region == "Global")
ggplot() +
geom_line(data = country_data, aes(x = annee, y = taux_couverture, color = "Pays sélectionné"), size = 1) +
geom_line(data = global_data, aes(x = annee, y = coverage, color = "Moyenne mondiale"), size = 1) +
labs(title = paste("Comparaison : ", input$country, "vs Moyenne mondiale pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
})
}
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
# Serveur
server <- function(input, output) {
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
# Graphique de comparaison avec la moyenne mondiale
output$globalPlot <- renderPlot({
country_data <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
global_data <- regional_global %>%
filter(vaccine == input$vaccine, region == "Global")
ggplot() +
geom_line(data = country_data, aes(x = annee, y = taux_couverture, color = "Pays sélectionné"), size = 1) +
geom_line(data = global_data, aes(x = annee, y = coverage, color = "Moyenne mondiale"), size = 1) +
labs(title = paste("Comparaison : ", input$country, "vs Moyenne mondiale pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
})
}
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
# Interface utilisateur
ui <- fluidPage(
titlePanel("Visualisation des taux de couverture vaccinale"),
sidebarLayout(
sidebarPanel(
selectInput("vaccine", "Sélectionnez un vaccin",
choices = unique(all_vaccines_long$vaccine),
selected = "BCG"),
selectInput("country", "Sélectionnez un pays",
choices = unique(all_vaccines_long$country),
selected = "France"),
checkboxInput("compare_global", "Inclure la moyenne mondiale", value = FALSE),
selectInput("countries_compare",
"Comparer avec d'autres pays",
choices = unique(all_vaccines_long$country),
selected = "Germany", multiple = TRUE)
),
mainPanel(
tabsetPanel(
tabPanel("Graphique par pays",
plotOutput("countryPlot")),
tabPanel("Comparaison avec d'autres pays",
plotOutput("comparePlot")),
tabPanel("Comparaison avec moyenne mondiale",
plotOutput("globalPlot"))
)
)
)
)
# Serveur
server <- function(input, output) {
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
# Graphique de comparaison avec la moyenne mondiale
output$globalPlot <- renderPlot({
country_data <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
global_data <- regional_global %>%
filter(vaccine == input$vaccine, region == "Global")
ggplot() +
geom_line(data = country_data, aes(x = annee, y = taux_couverture, color = "Pays sélectionné"), size = 1) +
geom_line(data = global_data, aes(x = annee, y = coverage, color = "Moyenne mondiale"), size = 1) +
labs(title = paste("Comparaison : ", input$country, "vs Moyenne mondiale pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
# Lancer l'application
shinyApp(ui = ui, server = server)
# Lancer l'application
shinyApp(ui = ui, server = server)
# Serveur
server <- function(input, output) {
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
# Graphique de comparaison avec la moyenne mondiale
output$globalPlot <- renderPlot({
country_data <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
global_data <- regional_global %>%
filter(vaccine == input$vaccine, region == "Global")
ggplot() +
geom_line(data = country_data, aes(x = annee, y = taux_couverture, color = "Pays sélectionné"), size = 1) +
geom_line(data = global_data, aes(x = annee, y = taux_couverture, color = "Moyenne mondiale"), size = 1) +
labs(title = paste("Comparaison : ", input$country, "vs Moyenne mondiale pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
})
}
# Interface utilisateur
ui <- fluidPage(
titlePanel("Visualisation des taux de couverture vaccinale"),
sidebarLayout(
sidebarPanel(
selectInput("vaccine", "Sélectionnez un vaccin",
choices = unique(all_vaccines_long$vaccine),
selected = "BCG"),
selectInput("country", "Sélectionnez un pays",
choices = unique(all_vaccines_long$country),
selected = "France"),
checkboxInput("compare_global", "Inclure la moyenne mondiale", value = FALSE),
selectInput("countries_compare",
"Comparer avec d'autres pays",
choices = unique(all_vaccines_long$country),
selected = "Germany", multiple = TRUE)
),
mainPanel(
tabsetPanel(
tabPanel("Graphique par pays",
plotOutput("countryPlot")),
tabPanel("Comparaison avec d'autres pays",
plotOutput("comparePlot")),
tabPanel("Comparaison avec moyenne mondiale",
plotOutput("globalPlot"))
)
)
)
)
# Serveur
server <- function(input, output) {
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
# Graphique de comparaison avec la moyenne mondiale
output$globalPlot <- renderPlot({
country_data <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
global_data <- regional_global %>%
filter(vaccine == input$vaccine, region == "Global")
ggplot() +
geom_line(data = country_data, aes(x = annee, y = taux_couverture, color = "Pays sélectionné"), size = 1) +
geom_line(data = global_data, aes(x = annee, y = taux_couverture, color = "Moyenne mondiale"), size = 1) +
labs(title = paste("Comparaison : ", input$country, "vs Moyenne mondiale pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
runApp('C:/Users/Miemo Borgia/Git/Immunization/filtres1.R')
# Lancer l'application
shinyApp(ui = ui, server = server)
runApp('C:/Users/Miemo Borgia/Git/Immunization/filtres1.R')
# Lancer l'application
shinyApp(ui = ui, server = server)
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1,5) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
runApp('C:/Users/Miemo Borgia/Git/Immunization/filtres1.R')
# Lancer l'application
shinyApp(ui = ui, server = server)
runApp('C:/Users/Miemo Borgia/Git/Immunization/filtres1.R')
runApp('C:/Users/Miemo Borgia/Git/Immunization/filtres1.R')
# Interface utilisateur
ui <- fluidPage(
titlePanel("Visualisation des taux de couverture vaccinale"),
sidebarLayout(
sidebarPanel(
selectInput("vaccine", "Sélectionnez un vaccin",
choices = unique(all_vaccines_long$vaccine),
selected = "BCG"),
selectInput("country", "Sélectionnez un pays",
choices = unique(all_vaccines_long$country),
selected = "France"),
checkboxInput("compare_global", "Inclure la moyenne mondiale", value = FALSE),
selectInput("countries_compare",
"Comparer avec d'autres pays",
choices = unique(all_vaccines_long$country),
selected = "Germany", multiple = TRUE)
),
mainPanel(
tabsetPanel(
tabPanel("Graphique par pays",
plotOutput("countryPlot")),
tabPanel("Comparaison avec d'autres pays",
plotOutput("comparePlot")),
tabPanel("Comparaison avec moyenne mondiale",
plotOutput("globalPlot"))
)
)
)
)
# Serveur
server <- function(input, output) {
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1,5) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1,5) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
# Graphique de comparaison avec la moyenne mondiale
output$globalPlot <- renderPlot({
country_data <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
global_data <- regional_global %>%
filter(vaccine == input$vaccine, region == "Global")
ggplot() +
geom_line(data = country_data, aes(x = annee, y = taux_couverture, color = "Pays sélectionné"), size = 1,5) +
geom_line(data = global_data, aes(x = annee, y = taux_couverture, color = "Moyenne mondiale"), size = 1,5) +
labs(title = paste("Comparaison : ", input$country, "vs Moyenne mondiale pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
runApp('C:/Users/Miemo Borgia/Git/Immunization/filtres1.R')
# Lancer l'application
shinyApp(ui = ui, server = server)
# Lancer l'application
shinyApp(ui = ui, server = server)
runApp('C:/Users/Miemo Borgia/Git/Immunization/filtres1.R')
# Lancer l'application
shinyApp(ui = ui, server = server)
# Serveur
server <- function(input, output) {
# Graphique pour un seul pays
output$countryPlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
ggplot(data_filtered, aes(x = annee, y = taux_couverture)) +
geom_line(color = "blue", size = 1) +
labs(title = paste("Évolution du taux de couverture pour", input$vaccine, "en", input$country),
x = "Année", y = "Taux de couverture (%)") +
theme_minimal()
})
# Graphique de comparaison entre pays
output$comparePlot <- renderPlot({
data_filtered <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country %in% c(input$country, input$countries_compare))
ggplot(data_filtered, aes(x = annee, y = taux_couverture, color = country)) +
geom_line(size = 1) +
labs(title = paste("Comparaison du taux de couverture pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Pays") +
theme_minimal()
})
# Graphique de comparaison avec la moyenne mondiale
output$globalPlot <- renderPlot({
country_data <- all_vaccines_long %>%
filter(vaccine == input$vaccine, country == input$country)
global_data <- regional_global %>%
filter(vaccine == input$vaccine, region == "Global")
ggplot() +
geom_line(data = country_data, aes(x = annee, y = taux_couverture, color = "Pays sélectionné"), size = 1) +
geom_line(data = global_data, aes(x = annee, y = taux_couverture, color = "Moyenne mondiale"), size = 1) +
labs(title = paste("Comparaison : ", input$country, "vs Moyenne mondiale pour", input$vaccine),
x = "Année", y = "Taux de couverture (%)",
color = "Légende") +
theme_minimal()
})
}
# Lancer l'application
shinyApp(ui = ui, server = server)
